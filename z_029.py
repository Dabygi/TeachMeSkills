"""задание 29 регулярные выражения"""

# 1. Написать регулярное выражение которое проверяет является ли строка строкой вида "a<любое число>c".
#    Пример: a23c

import re

# print(re.match("^\w\d+\w$", 'a23c') is not None)

# 2. Написать регулярное выражение которое проверяет является ли строка строкой вида "a<любое число или ничего>c".

# print(re.match("^(\w\d+?\w)$", 'a23c') is not None)

# 3. Написать функцию, которая выдирает логин из email. Если прислали не email вызвать исключение, в котором написать “Понимаю только email”. Использовать регулярные выражения.
# >>> get_login(“give_me_spam@gmail.com”)
# >>> “give_me_spam”
# >>> get_login(“fvdfvdfv”)
# >>> Exception: Понимаю только email

# def log():
#     a = str(input("get_login: "))
#     x = re.match("^((\w+)@\w+.\w+)$", a) is not None
#     if x is True:
#         print(re.match("^(\w+)@\w+.\w+$", a).groups())
#     else:
#         raise Exception('Понимаю только email')
#
# log()

# 4. Написать регулярное выражение которое вытягивает из тега значение.
# Пример: "<a>nn<a>"   тут значением является "nn", "<privet>kak dela<privet>" тут значением являестя "kak dela".
# Нужно использовать .groups()

# print(re.match("^<.+>(.+)<.+>$", "<privet>kak dela<privet>").groups())

# 5. Написать функцию которая принимает строку и выдирает из неё минуты или говорит что это не время.
#    Использовать регулярные выражения
#
# >>> fn("2018-01-09 12:32:04")
# >>> "32"
#
# >>> fn("bla bla")
# >>> "не понимаю"

def minut(a):
    x = re.match("^\d+\D\d+\D\d+\s\d+\D\d+\D\d+$", a) is not None
    if x is True:
        print(re.match("^\d+\D\d+\D\d+\s\d+\D(\d+)\D\d+$", a).groups())
    else:
        print('не понимаю')

minut("2018-01-09 12:41:04")

# 6. Написать калькулятор который умеет +, -, *, /. Для выдирания частей использовать .groups().
# >>> calc("4 + 5")
# >>> 9
# >>> calc("4 * -5")
# >>> -20
# Помнить что числа могут быть не целыми 23.45, отрицательными.
# Перед + и * в регулярном выражении ставить \

# def calc(a):
#     b = re.match("^.?(\d+)\s.\s.?(\d+)$", a) is not None
#     if b is True:
#         print(re.match("^(\D?\d+)\s.\s(\D?\d+)$", a).groups())
#
# calc("463 + -546")            #НЕ РЕШЕНО